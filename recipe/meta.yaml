{% set name = "finufft" %}
{% set version = "2.4.1" %}

package:
  name: finufft-split
  version: {{ version }}

source:
  url: https://github.com/flatironinstitute/finufft/archive/v{{ version }}.tar.gz
  sha256: f847bf1f10659afb5b42cdb1c77df09c8e828d2c04bfe8b70d1c0225c998b5f4

build:
  number: 3

outputs:
  # - name: libfinufft
  #   version: {{ version }}
  #   script: build_finufft.sh  # [unix]
  #   script: build_finufft.bat  # [win]
  #   build:
  #     skip: true  # [cuda_compiler_version != "None"]
  #     run_exports:
  #       - {{ pin_subpackage('libfinufft', max_pin='x.x') }}
  #     ignore_run_exports:
  #       - python  # [win]
  #   requirements:
  #     build:
  #       - {{ compiler('cxx') }}
  #       - {{ stdlib("c") }}
  #       - cmake
  #       - ninja
  #       - python  # [win]
  #     host:
  #       - fftw
  #       - llvm-openmp  # [osx]
  #       - libgomp  # [linux]
  #   test:
  #     commands:
  #       - test -f ${PREFIX}/include/finufft.h  # [unix]
  #       - if not exist %LIBRARY_PREFIX%\include\finufft.h (exit 1)  # [win]

  #       - test -e ${PREFIX}/lib/libfinufft${SHLIB_EXT}  # [unix]
  #       - test ! -f ${PREFIX}/lib/libfinufft_static.a   # [unix]

  #       - if not exist %LIBRARY_PREFIX%\bin\finufft.dll (exit 1)  # [win]
  #       - if not exist %LIBRARY_PREFIX%\lib\finufft.lib (exit 1)  # [win]

  - name: finufft
    version: {{ version }}
    script: build_finufft.sh  # [not win]
    script: build_finufft.bat  # [win]
    build:
      skip: true  # [cuda_compiler_version != "None"]
      script_env:
        - FINUFFT_USE_OPENMP=OFF  # [win]
    requirements:
      build:
        - cross-python_{{ target_platform }}    # [build_platform != target_platform]
        - python                                # [build_platform != target_platform]
        - scikit-build-core                     # [build_platform != target_platform]
        - fftw                                  # [build_platform != target_platform]
        - llvm-openmp                           # [osx and build_platform != target_platform]
        - libgomp                               # [linux and build_platform != target_platform]
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - cmake
        - ninja
        - make  # [not win]
      host:
        - python
        - pip
        - scikit-build-core
        - fftw
        - llvm-openmp  # [osx]
        - libgomp  # [linux]
      run:
        - python
        - numpy
        - packaging
    test:
      imports:
        - finufft
      source_files:
        - python/finufft/test
      commands:
        - python python/finufft/test/run_accuracy_tests.py

  # - name: libcufinufft
  #   version: {{ version }}
  #   script: build_finufft.sh  # [unix]
  #   build:
  #     skip: true  # [win or cuda_compiler_version == "None"]
  #     run_exports:
  #       - {{ pin_subpackage('libcufinufft', max_pin='x.x') }}
  #     ignore_run_exports:
  #       - nccl
  #       - fftw
  #       - libgomp
  #   requirements:
  #     build:
  #       - {{ compiler('cxx') }}
  #       - {{ stdlib("c") }}
  #       - {{ compiler('cuda') }}
  #       - cmake
  #       - ninja
  #     host:
  #       - nccl
  #       - cuda-cupti-dev    # [(cuda_compiler_version or "").startswith("12")]
  #       - cuda-cudart-dev   # [(cuda_compiler_version or "").startswith("12")]
  #       - cuda-nvml-dev     # [(cuda_compiler_version or "").startswith("12")]
  #       - cuda-nvtx-dev     # [(cuda_compiler_version or "").startswith("12")]
  #       - libcufft-dev      # [(cuda_compiler_version or "").startswith("12")]
  #       - cuda-version {{ cuda_compiler_version }}
  #       - fftw
  #       - libgomp
  #   test:
  #     commands:
  #       - test -f ${PREFIX}/include/cufinufft.h
  #       - test -e ${PREFIX}/lib/libcufinufft${SHLIB_EXT}

  - name: cufinufft
    version: {{ version }}
    script: build_finufft.sh
    build:
      skip: true  # [win or cuda_compiler_version == "None"]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - {{ compiler('cuda') }}
        - cmake
        - ninja
        - make
      host:
        - nccl
        - cuda-cupti-dev    # [(cuda_compiler_version or "").startswith("12")]
        - cuda-cudart-dev   # [(cuda_compiler_version or "").startswith("12")]
        - cuda-nvml-dev     # [(cuda_compiler_version or "").startswith("12")]
        - cuda-nvtx-dev     # [(cuda_compiler_version or "").startswith("12")]
        - libcufft-dev      # [(cuda_compiler_version or "").startswith("12")]
        - libcufft-static   # [(cuda_compiler_version or "").startswith("12")]
        - cuda-version {{ cuda_compiler_version }}
        - fftw
        - libgomp
        - python
        - pip
        - scikit-build-core
      run:
        - python
        - numpy
        - packaging
    test:
      imports:
        - cufinufft

about:
  home: https://github.com/flatironinstitute/finufft
  summary: 'Non-uniform fast Fourier transform library of types 1,2,3 in dimensions 1,2,3'
  license: Apache-2.0
  license_file: LICENSE
  doc_url: https://finufft.readthedocs.io
  dev_url: https://github.com/flatironinstitute/finufft

extra:
  recipe-maintainers:
    - dfm
    - lgarrison
